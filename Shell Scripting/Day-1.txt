Shell & Shell Scripting 

## What is a Shell?
A shell is a command-line interface (CLI) that allows users to interact with the operating system. It acts as an interpreter, processing user commands and executing them. The shell bridges the gap between the user and the system's kernel.

## What is Shell Scripting?
Shell scripting is the process of writing a series of shell commands in a file and executing them as a script. Shell scripts help automate repetitive tasks, system administration, and software deployment.

### Example of a Simple Shell Script:

#!/bin/bash
echo "Hello, User! Welcome to Shell Scripting."

## Operating System: GUI vs CLI
Graphical User Interface (GUI) provides a user-friendly environment with icons and windows, making it easy to use. However, it is slower due to graphical rendering and consumes more system resources. Examples include Windows, macOS, and Ubuntu (GNOME).

Command Line Interface (CLI) requires users to type commands, making it faster and more efficient for automation. It consumes fewer system resources and is commonly used in Linux Terminal, Command Prompt, and PowerShell.

## What is Bash Shell?
Bash (Bourne Again Shell) is one of the most widely used shells in Linux and macOS. It is an extended version of the Bourne Shell (sh) and provides enhanced scripting capabilities.

### Features of Bash Shell:
- Command Execution: Runs commands interactively.
- Scripting Support: Includes loops, conditionals, and functions.
- Variables: Enables storing and manipulating values.
- Job Control: Manages foreground and background processes.
- History: Stores previously executed commands for reference.

### Example of a Bash Script:

#!/bin/bash
# This script prints system information
echo "Current User: $(whoami)"
echo "Date: $(date)"
echo "Uptime: $(uptime)"

## Common Shell Commands
- ls: Lists files and directories.
- cd: Changes the directory.
- pwd: Prints the current directory.
- mkdir: Creates a new directory.
- rm: Deletes a file or directory.
- cp: Copies files or directories.
- mv: Moves or renames files.
- echo: Prints output to the terminal.
- chmod: Changes file permissions.
- grep: Searches for text within files.

## Advantages of Shell Scripting
- Automation: Reduces manual effort for repetitive tasks.
- Efficiency: Speeds up system administration tasks.
- Customization: Allows users to tailor scripts for specific needs.
- Flexibility: Works across different Linux distributions and UNIX-based systems.
- Batch Processing: Executes multiple commands sequentially.


