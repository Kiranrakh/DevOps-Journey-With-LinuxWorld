A StorageClass in Kubernetes defines how storage should be dynamically provisioned when a PersistentVolumeClaim (PVC) requests storage.



-----------first-sc.ymal----------------------

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: mypersonalsc
provisioner: k8s.io/minikube-hostpath
#reClaimPolicy: Retain


>> kubectl apply -f ./first-sc.yml




---------------first-pvc-sc.yml------------------

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: firstpvc
spec:
  storageClassName: mypersonalsc
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

>> kubectl apply -f first-pvc-sc.yml

>> kubectl get pv

>> kubectl get sc

>> kubectl describe pv



----------- first-deploy-pvc.yml--------

kind: Deployment
metadata:
  labels:
    app: myweb
  name: myweb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myweb
  template:
    metadata:
      labels:
        app: myweb
    spec:
      volumes:
        - name: pod-pvcl
          persistentVolumeClaim:
            claimName: firstpvc
      containers:
        - image: vimal13/apache-webserver-php
          name: apache-webserver-php
          volumeMounts:
            - mountPath: "/data"
              name: pod-pvcl

>> kubectl apply -f .\first-deploy-pvc.yml
>> kubectl get pvc
>> kubectl get sc
>> kubectl get pv
>> kubectl get pods
>> kubectl exec -it <pod-name> --bash
df

---------------------------------------------



